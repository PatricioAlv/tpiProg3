@model List<TaskManager.Shared.DTOs.ProjectDto>
@{
    ViewData["Title"] = "Proyectos";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>
        <i class="fas fa-project-diagram"></i> Mis Proyectos
    </h1>
    <a asp-action="Create" class="btn btn-primary">
        <i class="fas fa-plus"></i> Nuevo Proyecto
    </a>
</div>

@if (Model.Any())
{
    <div class="row">
        @foreach (var project in Model)
        {
            <div class="col-md-6 col-lg-4 mb-4">
                <div class="card h-100">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">@project.Name</h5>
                        <span class="badge @GetStatusBadgeClass(project.Status)">
                            @GetStatusDisplayName(project.Status)
                        </span>
                    </div>
                    <div class="card-body">
                        <p class="card-text">@project.Description</p>
                        <div class="row text-muted small">
                            <div class="col-6">
                                <i class="fas fa-calendar"></i> @project.CreatedAt.ToString("dd/MM/yyyy")
                            </div>
                            <div class="col-6">
                                <i class="fas fa-tasks"></i> @project.Tasks.Count tareas
                            </div>
                        </div>
                        @if (project.DueDate.HasValue)
                        {
                            <div class="mt-2">
                                <small class="text-muted">
                                    <i class="fas fa-clock"></i> Vence: @project.DueDate.Value.ToString("dd/MM/yyyy")
                                </small>
                            </div>
                        }
                        <div class="mt-2">
                            <small class="text-muted">
                                <i class="fas fa-users"></i> @project.TeamMembers.Count miembros
                            </small>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="btn-group w-100" role="group">
                            <a asp-action="Details" asp-route-id="@project.Id" class="btn btn-outline-primary btn-sm">
                                <i class="fas fa-eye"></i> Ver
                            </a>
                            <a asp-action="Edit" asp-route-id="@project.Id" class="btn btn-outline-secondary btn-sm">
                                <i class="fas fa-edit"></i> Editar
                            </a>
                            <a asp-action="Delete" asp-route-id="@project.Id" class="btn btn-outline-danger btn-sm">
                                <i class="fas fa-trash"></i> Eliminar
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="text-center py-5">
        <div class="mb-3">
            <i class="fas fa-project-diagram fa-3x text-muted"></i>
        </div>
        <h3 class="text-muted">No tienes proyectos aún</h3>
        <p class="text-muted">¡Crea tu primer proyecto para comenzar!</p>
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus"></i> Crear Primer Proyecto
        </a>
    </div>
}

@functions {
    private string GetStatusBadgeClass(TaskManager.Shared.Models.ProjectStatus status)
    {
        return status switch
        {
            TaskManager.Shared.Models.ProjectStatus.Planning => "bg-secondary",
            TaskManager.Shared.Models.ProjectStatus.InProgress => "bg-primary",
            TaskManager.Shared.Models.ProjectStatus.Completed => "bg-success",
            TaskManager.Shared.Models.ProjectStatus.OnHold => "bg-warning",
            TaskManager.Shared.Models.ProjectStatus.Cancelled => "bg-danger",
            _ => "bg-secondary"
        };
    }

    private string GetStatusDisplayName(TaskManager.Shared.Models.ProjectStatus status)
    {
        return status switch
        {
            TaskManager.Shared.Models.ProjectStatus.Planning => "Planificación",
            TaskManager.Shared.Models.ProjectStatus.InProgress => "En Progreso",
            TaskManager.Shared.Models.ProjectStatus.Completed => "Completado",
            TaskManager.Shared.Models.ProjectStatus.OnHold => "En Pausa",
            TaskManager.Shared.Models.ProjectStatus.Cancelled => "Cancelado",
            _ => status.ToString()
        };
    }
}
