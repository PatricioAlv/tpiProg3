@model TaskManager.Shared.DTOs.TaskItemDto
@{
    ViewData["Title"] = "Eliminar Tarea";
}

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="card border-danger">
            <div class="card-header bg-danger text-white">
                <h4>
                    <i class="fas fa-exclamation-triangle"></i> Confirmar Eliminación
                </h4>
            </div>
            <div class="card-body">
                <div class="alert alert-warning">
                    <i class="fas fa-warning"></i>
                    <strong>¿Está seguro que desea eliminar esta tarea?</strong><br>
                    Esta acción no se puede deshacer.
                </div>
                
                <div class="mb-3">
                    <h5 class="text-danger">@Model.Title</h5>
                </div>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-2">
                            <small class="text-muted">Proyecto:</small><br>
                            <strong>@Model.ProjectName</strong>
                        </div>
                        
                        <div class="mb-2">
                            <small class="text-muted">Estado:</small><br>
                            <span class="badge @GetStatusBadgeClass(Model.Status)">
                                @GetStatusDisplayName(Model.Status)
                            </span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-2">
                            <small class="text-muted">Prioridad:</small><br>
                            <span class="badge @GetPriorityBadgeClass(Model.Priority)">
                                @GetPriorityDisplayName(Model.Priority)
                            </span>
                        </div>
                        
                        <div class="mb-2">
                            <small class="text-muted">Creado:</small><br>
                            <strong>@Model.CreatedAt.ToString("dd/MM/yyyy")</strong>
                        </div>
                    </div>
                </div>
                
                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <div class="mb-3">
                        <small class="text-muted">Descripción:</small><br>
                        <p>@Model.Description</p>
                    </div>
                }
                
                @if (Model.AssignedToUser != null)
                {
                    <div class="mb-3">
                        <small class="text-muted">Asignada a:</small><br>
                        <strong>@Model.AssignedToUser.Name</strong>
                    </div>
                }
                
                <form asp-action="Delete" method="post" class="d-inline">
                    <div class="d-flex justify-content-between">
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Cancelar
                        </a>
                        <button type="submit" class="btn btn-danger">
                            <i class="fas fa-trash"></i> Confirmar Eliminación
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetStatusBadgeClass(TaskManager.Shared.Models.TaskStatus status)
    {
        return status switch
        {
            TaskManager.Shared.Models.TaskStatus.Todo => "bg-secondary",
            TaskManager.Shared.Models.TaskStatus.InProgress => "bg-primary",
            TaskManager.Shared.Models.TaskStatus.Testing => "bg-warning",
            TaskManager.Shared.Models.TaskStatus.Completed => "bg-success",
            TaskManager.Shared.Models.TaskStatus.Cancelled => "bg-danger",
            _ => "bg-secondary"
        };
    }

    private string GetStatusDisplayName(TaskManager.Shared.Models.TaskStatus status)
    {
        return status switch
        {
            TaskManager.Shared.Models.TaskStatus.Todo => "Por Hacer",
            TaskManager.Shared.Models.TaskStatus.InProgress => "En Progreso",
            TaskManager.Shared.Models.TaskStatus.Testing => "En Pruebas",
            TaskManager.Shared.Models.TaskStatus.Completed => "Completada",
            TaskManager.Shared.Models.TaskStatus.Cancelled => "Cancelada",
            _ => status.ToString()
        };
    }

    private string GetPriorityBadgeClass(TaskManager.Shared.Models.TaskPriority priority)
    {
        return priority switch
        {
            TaskManager.Shared.Models.TaskPriority.Low => "bg-success",
            TaskManager.Shared.Models.TaskPriority.Medium => "bg-warning",
            TaskManager.Shared.Models.TaskPriority.High => "bg-danger",
            TaskManager.Shared.Models.TaskPriority.Critical => "bg-dark",
            _ => "bg-secondary"
        };
    }

    private string GetPriorityDisplayName(TaskManager.Shared.Models.TaskPriority priority)
    {
        return priority switch
        {
            TaskManager.Shared.Models.TaskPriority.Low => "Baja",
            TaskManager.Shared.Models.TaskPriority.Medium => "Media",
            TaskManager.Shared.Models.TaskPriority.High => "Alta",
            TaskManager.Shared.Models.TaskPriority.Critical => "Crítica",
            _ => priority.ToString()
        };
    }
}
