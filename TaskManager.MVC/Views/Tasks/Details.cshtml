@model TaskManager.Shared.DTOs.TaskItemDto
@{
    ViewData["Title"] = "Detalles de Tarea";
}

<div class="row justify-content-center">
    <div class="col-md-10">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h4>
                    <i class="fas fa-eye"></i> Detalles de la Tarea
                </h4>
                <div>
                    <span class="badge @GetStatusBadgeClass(Model.Status) me-2">
                        @GetStatusDisplayName(Model.Status)
                    </span>
                    <span class="badge @GetPriorityBadgeClass(Model.Priority)">
                        @GetPriorityDisplayName(Model.Priority)
                    </span>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-8">
                        <h3 class="mb-3">@Model.Title</h3>
                        
                        @if (!string.IsNullOrEmpty(Model.Description))
                        {
                            <div class="mb-4">
                                <h6 class="text-muted">Descripción:</h6>
                                <p class="lead">@Model.Description</p>
                            </div>
                        }
                    </div>
                    <div class="col-md-4">
                        <div class="card bg-light">
                            <div class="card-body">
                                <h6 class="card-title">Información</h6>
                                
                                <div class="mb-2">
                                    <small class="text-muted">Proyecto:</small><br>
                                    <strong>@Model.ProjectName</strong>
                                </div>
                                
                                <div class="mb-2">
                                    <small class="text-muted">Creado por:</small><br>
                                    <strong>@Model.CreatedByUser.Name</strong>
                                </div>
                                
                                @if (Model.AssignedToUser != null)
                                {
                                    <div class="mb-2">
                                        <small class="text-muted">Asignado a:</small><br>
                                        <strong>@Model.AssignedToUser.Name</strong>
                                    </div>
                                }
                                
                                <div class="mb-2">
                                    <small class="text-muted">Fecha de creación:</small><br>
                                    <strong>@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</strong>
                                </div>
                                
                                @if (Model.DueDate.HasValue)
                                {
                                    <div class="mb-2">
                                        <small class="text-muted">Fecha de vencimiento:</small><br>
                                        <strong class="@(Model.DueDate.Value < DateTime.Now ? "text-danger" : "")">
                                            @Model.DueDate.Value.ToString("dd/MM/yyyy")
                                        </strong>
                                        @if (Model.DueDate.Value < DateTime.Now)
                                        {
                                            <br><small class="text-danger">¡Vencida!</small>
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="d-flex justify-content-between mt-4">
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Volver a Tareas
                    </a>
                    <div>
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning me-2">
                            <i class="fas fa-edit"></i> Editar
                        </a>
                        <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">
                            <i class="fas fa-trash"></i> Eliminar
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetStatusBadgeClass(TaskManager.Shared.Models.TaskStatus status)
    {
        return status switch
        {
            TaskManager.Shared.Models.TaskStatus.Todo => "bg-secondary",
            TaskManager.Shared.Models.TaskStatus.InProgress => "bg-primary",
            TaskManager.Shared.Models.TaskStatus.Testing => "bg-warning",
            TaskManager.Shared.Models.TaskStatus.Completed => "bg-success",
            TaskManager.Shared.Models.TaskStatus.Cancelled => "bg-danger",
            _ => "bg-secondary"
        };
    }

    private string GetStatusDisplayName(TaskManager.Shared.Models.TaskStatus status)
    {
        return status switch
        {
            TaskManager.Shared.Models.TaskStatus.Todo => "Por Hacer",
            TaskManager.Shared.Models.TaskStatus.InProgress => "En Progreso",
            TaskManager.Shared.Models.TaskStatus.Testing => "En Pruebas",
            TaskManager.Shared.Models.TaskStatus.Completed => "Completada",
            TaskManager.Shared.Models.TaskStatus.Cancelled => "Cancelada",
            _ => status.ToString()
        };
    }

    private string GetPriorityBadgeClass(TaskManager.Shared.Models.TaskPriority priority)
    {
        return priority switch
        {
            TaskManager.Shared.Models.TaskPriority.Low => "bg-success",
            TaskManager.Shared.Models.TaskPriority.Medium => "bg-warning",
            TaskManager.Shared.Models.TaskPriority.High => "bg-danger",
            TaskManager.Shared.Models.TaskPriority.Critical => "bg-dark",
            _ => "bg-secondary"
        };
    }

    private string GetPriorityDisplayName(TaskManager.Shared.Models.TaskPriority priority)
    {
        return priority switch
        {
            TaskManager.Shared.Models.TaskPriority.Low => "Baja",
            TaskManager.Shared.Models.TaskPriority.Medium => "Media",
            TaskManager.Shared.Models.TaskPriority.High => "Alta",
            TaskManager.Shared.Models.TaskPriority.Critical => "Crítica",
            _ => priority.ToString()
        };
    }
}
